// Code generated by MockGen. DO NOT EDIT.
// Source: image-previewer/internal/domain (interfaces: ImageIDResolver)

// Package mocks is a generated GoMock package.
package mocks

import (
	domain "image-previewer/internal/domain"
	dto "image-previewer/internal/domain/dto"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockImageIDResolver is a mock of ImageIDResolver interface
type MockImageIDResolver struct {
	ctrl     *gomock.Controller
	recorder *MockImageIDResolverMockRecorder
}

// MockImageIDResolverMockRecorder is the mock recorder for MockImageIDResolver
type MockImageIDResolverMockRecorder struct {
	mock *MockImageIDResolver
}

// NewMockImageIDResolver creates a new mock instance
func NewMockImageIDResolver(ctrl *gomock.Controller) *MockImageIDResolver {
	mock := &MockImageIDResolver{ctrl: ctrl}
	mock.recorder = &MockImageIDResolverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockImageIDResolver) EXPECT() *MockImageIDResolverMockRecorder {
	return m.recorder
}

// ResolveImageID mocks base method
func (m *MockImageIDResolver) ResolveImageID(arg0 string, arg1 dto.ImageDimensions) domain.ImageID {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ResolveImageID", arg0, arg1)
	ret0, _ := ret[0].(domain.ImageID)
	return ret0
}

// ResolveImageID indicates an expected call of ResolveImageID
func (mr *MockImageIDResolverMockRecorder) ResolveImageID(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ResolveImageID", reflect.TypeOf((*MockImageIDResolver)(nil).ResolveImageID), arg0, arg1)
}
