// Code generated by MockGen. DO NOT EDIT.
// Source: image-previewer/internal/domain (interfaces: ImageIdResolver)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	domain "image-previewer/internal/domain"
	valueObjects "image-previewer/internal/domain/valueObjects"
	reflect "reflect"
)

// MockImageIdResolver is a mock of ImageIdResolver interface
type MockImageIdResolver struct {
	ctrl     *gomock.Controller
	recorder *MockImageIdResolverMockRecorder
}

// MockImageIdResolverMockRecorder is the mock recorder for MockImageIdResolver
type MockImageIdResolverMockRecorder struct {
	mock *MockImageIdResolver
}

// NewMockImageIdResolver creates a new mock instance
func NewMockImageIdResolver(ctrl *gomock.Controller) *MockImageIdResolver {
	mock := &MockImageIdResolver{ctrl: ctrl}
	mock.recorder = &MockImageIdResolverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockImageIdResolver) EXPECT() *MockImageIdResolverMockRecorder {
	return m.recorder
}

// ResolveImageId mocks base method
func (m *MockImageIdResolver) ResolveImageId(arg0 string, arg1 valueObjects.ImageDimensions) domain.ImageId {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ResolveImageId", arg0, arg1)
	ret0, _ := ret[0].(domain.ImageId)
	return ret0
}

// ResolveImageId indicates an expected call of ResolveImageId
func (mr *MockImageIdResolverMockRecorder) ResolveImageId(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ResolveImageId", reflect.TypeOf((*MockImageIdResolver)(nil).ResolveImageId), arg0, arg1)
}
